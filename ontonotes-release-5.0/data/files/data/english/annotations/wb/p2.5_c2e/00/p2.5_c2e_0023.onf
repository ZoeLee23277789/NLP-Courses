------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
    The more than 6,000 workers that this group used to have were all bought out.

Treebanked sentence:
--------------------
    The more than 6,000 workers that this group used *-1 to have *T*-2 were all bought *-3 out .

Tree:
-----
    (TOP (S (NP-SBJ-3 (NP (DT The)
                          (QP (JJR more)
                              (IN than)
                              (CD 6,000))
                          (NNS workers))
                      (SBAR (WHNP-2 (WDT that))
                            (S (NP-SBJ-1 (DT this)
                                         (NN group))
                               (VP (VBD used)
                                   (S (NP-SBJ (-NONE- *-1))
                                      (VP (TO to)
                                          (VP (VB have)
                                              (NP (-NONE- *T*-2)))))))))
            (VP (VBD were)
                (DT all)
                (VP (VBN bought)
                    (NP (-NONE- *-3))
                    (PRT (RP out))))
            (. .)))

Leaves:
-------
    0   The
    1   more
    2   than
    3   6,000
           name:  QUANTITY           3-3    6,000
    4   workers
    5   that
    6   this
    7   group
    8   used
           sense: use-v.4
           prop:  use.03
            v          * -> 8:0,  used
                         -> 10:1, to have *T*-2
    9   *-1
    10  to
    11  have
           sense: have-v.5
    12  *T*-2
    13  were
           sense: be-v.1
           prop:  be.03
            v          * -> 13:0, were
    14  all
    15  bought
           prop:  buy.03
            v          * -> 15:0, bought
                         -> 17:0, out
            ARG1       * -> 16:0, *-3 -> 0:2, The more than 6,000 workers that this group used *-1 to have *T*-2
            LINK-PCR   * -> 16:0, *-3 -> 0:2, The more than 6,000 workers that this group used *-1 to have *T*-2
                       * -> 16:0, *-3 -> 0:2, The more than 6,000 workers that this group used *-1 to have *T*-2
    16  *-3
    17  out
    18  .


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
    Only some 700 people work at the reorganized Cinda Changlin Group.

Treebanked sentence:
--------------------
    Only some 700 people work at the reorganized Cinda Changlin Group .

Tree:
-----
    (TOP (S (NP-SBJ (QP (RB Only)
                        (DT some)
                        (CD 700))
                    (NNS people))
            (VP (VBP work)
                (PP-LOC (IN at)
                        (NP (DT the)
                            (VBN reorganized)
                            (NML (NNP Cinda)
                                 (NNP Changlin))
                            (NNP Group))))
            (. .)))

Leaves:
-------
    0   Only
    1   some
    2   700
           name:  QUANTITY           2-2    700
    3   people
    4   work
           sense: work-v.1
           prop:  work.01
            v          * -> 4:0,  work
            ARG0       * -> 0:2,  Only some 700 people
            ARG2       * -> 5:1,  at the reorganized Cinda Changlin Group
    5   at
    6   the
    7   reorganized
           prop:  reorganize.01
            v          * -> 7:0,  reorganized
            ARG1       * -> 8:1,  Cinda Changlin
                         -> 10:0, Group
    8   Cinda
        !  name:  ORG                8-10   Cinda Changlin Group
    9   Changlin
    10  Group
    11  .


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
    The rest of them have all scattered in limbo as they search for a way to make a living.

Treebanked sentence:
--------------------
    The rest of them have all scattered in limbo as they search for a way 0 *PRO* to make a living *T*-1 .

Tree:
-----
    (TOP (S (NP-SBJ (NP (DT The)
                        (NN rest))
                    (PP (IN of)
                        (NP (PRP them))))
            (VP (VBP have)
                (DT all)
                (VP (VBN scattered)
                    (PP-LOC (IN in)
                            (NP (NN limbo)))
                    (SBAR-ADV (IN as)
                              (S (NP-SBJ (PRP they))
                                 (VP (VBP search)
                                     (PP-CLR (IN for)
                                             (NP (NP (DT a)
                                                     (NN way))
                                                 (SBAR (WHADVP-1 (-NONE- 0))
                                                       (S (NP-SBJ (-NONE- *PRO*))
                                                          (VP (TO to)
                                                              (VP (VB make)
                                                                  (NP (DT a)
                                                                      (NN living))
                                                                  (ADVP-MNR (-NONE- *T*-1)))))))))))))
            (. .)))

Leaves:
-------
    0   The
    1   rest
    2   of
    3   them
    4   have
           sense: have-v.12
    5   all
    6   scattered
           prop:  scatter.01
            v          * -> 6:0,  scattered
            ARG1       * -> 0:2,  The rest of them
            ARG2       * -> 7:1,  in limbo
            ARGM-ADV   * -> 9:1,  as they search for a way 0 *PRO* to make a living *T*-1
    7   in
    8   limbo
    9   as
    10  they
    11  search
           sense: search-v.1
           prop:  search.01
            v          * -> 11:0, search
            ARG0       * -> 10:1, they
            ARG2       * -> 12:1, for a way 0 *PRO* to make a living *T*-1
    12  for
    13  a
    14  way
    15  0
    16  *PRO*
    17  to
    18  make
           sense: make-v.7
    19  a
    20  living
    21  *T*-1
    22  .


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
    Since January 2005, they themselves have had to renew insurances by themselves.

Treebanked sentence:
--------------------
    Since January 2005 , they themselves have had *-1 to renew insurances by themselves .

Tree:
-----
    (TOP (S (PP-TMP (IN Since)
                    (NP (NNP January)
                        (CD 2005)))
            (, ,)
            (NP-SBJ-1 (NP (PRP they))
                      (NP (PRP themselves)))
            (VP (VBP have)
                (VP (VBN had)
                    (S (NP-SBJ (-NONE- *-1))
                       (VP (TO to)
                           (VP (VB renew)
                               (NP (NNS insurances))
                               (PP-MNR (IN by)
                                       (NP (PRP themselves))))))))
            (. .)))

Leaves:
-------
    0   Since
    1   January
           name:  DATE               1-2    January 2005
    2   2005
    3   ,
    4   they
    5   themselves
    6   have
    7   had
           sense: have-v.12
    8   *-1
    9   to
    10  renew
           sense: renew-v.1
           prop:  renew.01
            v          * -> 10:0, renew
            ARG0       * -> 8:0,  *-1 -> 4:2, they themselves
            ARG1       * -> 11:1, insurances
            ARGM-MNR   * -> 12:1, by themselves
    11  insurances
    12  by
    13  themselves
    14  .


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
    For the costs of retirement and health insurances at current levels, each person has to pay about 3,000 yuan per year.

Treebanked sentence:
--------------------
    For the costs of retirement and health insurances at current levels , each person has *PRO*-1 to pay about 3,000 yuan
    per year *T*-2 .

Tree:
-----
    (TOP (S (PP-CLR-TPC-2 (IN For)
                          (NP (NP (DT the)
                                  (NNS costs))
                              (PP (IN of)
                                  (NP (NP (NN retirement))
                                      (CC and)
                                      (NP (NN health)
                                          (NNS insurances))))
                              (PP (IN at)
                                  (NP (JJ current)
                                      (NNS levels)))))
            (, ,)
            (NP-SBJ-1 (DT each)
                      (NN person))
            (VP (VBZ has)
                (S (NP-SBJ (-NONE- *PRO*-1))
                   (VP (TO to)
                       (VP (VB pay)
                           (NP (NP (QP (RB about)
                                       (CD 3,000))
                                   (NN yuan))
                               (PP (IN per)
                                   (NP (NN year))))
                           (PP-CLR (-NONE- *T*-2))))))
            (. .)))

Leaves:
-------
    0   For
    1   the
    2   costs
    3   of
    4   retirement
           sense: retirement-n.1
           prop:  retirement.01
            n          * -> 4:0,  retirement
    5   and
    6   health
    7   insurances
    8   at
    9   current
    10  levels
    11  ,
    12  each
    13  person
    14  has
           sense: have-v.12
    15  *PRO*-1
    16  to
    17  pay
           sense: pay-v.1
           prop:  pay.01
            v          * -> 17:0, pay
            ARG0       * -> 15:0, *PRO*-1 -> 12:1, each person
            ARG1       * -> 18:3, about 3,000 yuan per year
            ARG3       * -> 23:0, *T*-2 -> 0:1, For the costs of retirement and health insurances at current levels
    18  about
    19  3,000
        !  name:  MONEY              19-20  3,000 yuan
    20  yuan
    21  per
    22  year
    23  *T*-2
    24  .


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
    Where can they go to get the money ?

Treebanked sentence:
--------------------
    Where can they go *T*-1 *PRO*-2 to get the money ?

Tree:
-----
    (TOP (SBARQ (WHADVP-1 (WRB Where))
                (SQ (MD can)
                    (NP-SBJ-2 (PRP they))
                    (VP (VB go)
                        (ADVP-LOC (-NONE- *T*-1))
                        (S-PRP (NP-SBJ (-NONE- *PRO*-2))
                               (VP (TO to)
                                   (VP (VB get)
                                       (NP (DT the)
                                           (NN money)))))))
                (. ?)))

Leaves:
-------
    0   Where
    1   can
    2   they
    3   go
           sense: go-v.1
           prop:  go.02
            v          * -> 3:0,  go
            ARGM-MOD   * -> 1:0,  can
            ARG0       * -> 2:1,  they
            ARG4       * -> 4:0,  *T*-1 -> 0:1, Where
            ARGM-PRP   * -> 5:2,  *PRO*-2 to get the money
    4   *T*-1
    5   *PRO*-2
    6   to
    7   get
           sense: get-v.1
           prop:  get.01
            v          * -> 7:0,  get
            ARG0       * -> 5:0,  *PRO*-2 -> 2:1, they
            ARG1       * -> 8:1,  the money
    8   the
    9   money
    10  ?


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
    This month Jiangxi Province increased pension payments to the retirees, but all the indispensable living costs that a
    person needs to pay for have started to rise accordingly in the markets.

Treebanked sentence:
--------------------
    This month Jiangxi Province increased pension payments to the retirees , but all the indispensable living costs that a
    person needs *-1 to pay for *T*-2 have started *-3 to rise accordingly in the markets .

Tree:
-----
    (TOP (S (S (NP-TMP (DT This)
                       (NN month))
               (NP-SBJ (NNP Jiangxi)
                       (NNP Province))
               (VP (VBD increased)
                   (NP (NP (NN pension)
                           (NNS payments))
                       (PP (IN to)
                           (NP (DT the)
                               (NNS retirees))))))
            (, ,)
            (CC but)
            (S (NP-SBJ-3 (NP (PDT all)
                             (DT the)
                             (JJ indispensable)
                             (NN living)
                             (NNS costs))
                         (SBAR (WHNP-2 (WDT that))
                               (S (NP-SBJ-1 (DT a)
                                            (NN person))
                                  (VP (VBZ needs)
                                      (S (NP-SBJ (-NONE- *-1))
                                         (VP (TO to)
                                             (VP (VB pay)
                                                 (PP-CLR (IN for)
                                                         (NP (-NONE- *T*-2))))))))))
               (VP (VBP have)
                   (VP (VBN started)
                       (S (NP-SBJ (-NONE- *-3))
                          (VP (TO to)
                              (VP (VB rise)
                                  (ADVP-MNR (RB accordingly))
                                  (PP-LOC (IN in)
                                          (NP (DT the)
                                              (NNS markets)))))))))
            (. .)))

Leaves:
-------
    0   This
    1   month
    2   Jiangxi
           name:  GPE                2-3    Jiangxi Province
    3   Province
    4   increased
           prop:  increase.01
            v          * -> 4:0,  increased
            ARGM-TMP   * -> 0:1,  This month
            ARG0       * -> 2:1,  Jiangxi Province
            ARG1       * -> 5:2,  pension payments to the retirees
    5   pension
    6   payments
    7   to
    8   the
    9   retirees
    10  ,
    11  but
    12  all
    13  the
    14  indispensable
    15  living
    16  costs
    17  that
    18  a
    19  person
    20  needs
           sense: need-v.2
           prop:  need.01
            v          * -> 20:0, needs
            ARG0       * -> 18:1, a person
            ARG1       * -> 21:2, *-1 to pay for *T*-2
    21  *-1
    22  to
    23  pay
           sense: pay-v.1
           prop:  pay.01
            v          * -> 23:0, pay
            ARG0       * -> 21:0, *-1 -> 18:1, a person
            ARG3       * -> 24:1, for *T*-2
    24  for
    25  *T*-2
    26  have
    27  started
           sense: start-v.2
           prop:  start.01
            v          * -> 27:0, started
            ARG1       * -> 28:2, *-3 to rise accordingly in the markets
    28  *-3
    29  to
    30  rise
           sense: rise-v.2
           prop:  rise.01
            v          * -> 30:0, rise
            ARG1       * -> 28:0, *-3 -> 12:2, all the indispensable living costs that a person needs *-1 to pay for
                                               *T*-2
            ARGM-MNR   * -> 31:1, accordingly
            ARGM-LOC   * -> 32:1, in the markets
            LINK-PCR   * -> 28:0, *-3 -> 12:2, all the indispensable living costs that a person needs *-1 to pay for
                                               *T*-2
                       * -> 28:0, *-3 -> 12:2, all the indispensable living costs that a person needs *-1 to pay for
                                               *T*-2
    31  accordingly
    32  in
    33  the
    34  markets
    35  .


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
    The government's " average wage " level is going to rise again, so next year the costs of retirement and health
    insurances that laid-off workers have to pay for will rise again.

Treebanked sentence:
--------------------
    The government 's " average wage " level is going *-1 to rise again , so next year the costs of retirement and health
    insurances that laid - off workers have *-2 to pay for *T*-3 will rise again .

Tree:
-----
    (TOP (S (S (NP-SBJ-1 (NP (DT The)
                             (NN government)
                             (POS 's))
                         (`` ")
                         (NML (JJ average)
                              (NN wage))
                         ('' ")
                         (NN level))
               (VP (VBZ is)
                   (VP (VBG going)
                       (S (NP-SBJ (-NONE- *-1))
                          (VP (TO to)
                              (VP (VB rise)
                                  (ADVP (RB again))))))))
            (, ,)
            (CC so)
            (S (NP-TMP (JJ next)
                       (NN year))
               (NP-SBJ (NP (NP (DT the)
                               (NNS costs))
                           (PP (IN of)
                               (NP (NP (NN retirement))
                                   (CC and)
                                   (NP (NN health)
                                       (NNS insurances)))))
                       (SBAR (WHNP-3 (WDT that))
                             (S (NP-SBJ-2 (ADJP (VBN laid)
                                                (HYPH -)
                                                (RP off))
                                          (NNS workers))
                                (VP (VBP have)
                                    (S (NP-SBJ (-NONE- *-2))
                                       (VP (TO to)
                                           (VP (VB pay)
                                               (PP-CLR (IN for)
                                                       (NP (-NONE- *T*-3))))))))))
               (VP (MD will)
                   (VP (VB rise)
                       (ADVP (RB again)))))
            (. .)))

Leaves:
-------
    0   The
    1   government
    2   's
    3   "
    4   average
    5   wage
    6   "
    7   level
    8   is
    9   going
           sense: go-v.7
           prop:  go.04
            v          * -> 9:0,  going
    10  *-1
    11  to
    12  rise
           sense: rise-v.2
           prop:  rise.01
            v          * -> 12:0, rise
            ARG1       * -> 10:0, *-1 -> 0:2, The government 's " average wage " level
            ARGM-TMP   * -> 13:1, again
            LINK-PCR   * -> 10:0, *-1 -> 0:2, The government 's " average wage " level
                       * -> 10:0, *-1 -> 0:2, The government 's " average wage " level
    13  again
    14  ,
    15  so
    16  next
    17  year
    18  the
    19  costs
    20  of
    21  retirement
           sense: retirement-n.1
           prop:  retirement.01
            n          * -> 21:0, retirement
    22  and
    23  health
    24  insurances
    25  that
    26  laid
           prop:  lay.02
            v          * -> 26:0, laid
                         -> 28:0, off
            ARG1       * -> 29:0, workers
    27  -
    28  off
    29  workers
    30  have
           sense: have-v.12
    31  *-2
    32  to
    33  pay
           sense: pay-v.1
           prop:  pay.01
            v          * -> 33:0, pay
            ARG0       * -> 31:0, *-2 -> 26:2, laid - off workers
            ARG3       * -> 34:1, for *T*-3
    34  for
    35  *T*-3
    36  will
    37  rise
           sense: rise-v.2
           prop:  rise.01
            v          * -> 37:0, rise
            ARGM-TMP   * -> 16:1, next year
            ARG1       * -> 18:3, the costs of retirement and health insurances that laid - off workers have *-2 to pay
                                  for *T*-3
            ARGM-MOD   * -> 36:0, will
            ARGM-TMP   * -> 38:1, again
    38  again
    39  .


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
    Even for those laid-off workers who can find work, are private companies going to give them higher wages ?

Treebanked sentence:
--------------------
    Even for those laid - off workers who *T*-1 can find work , are private companies going *-2 to give them higher wages ?

Tree:
-----
    (TOP (SQ (PP (ADVP (RB Even))
                 (IN for)
                 (NP (NP (DT those)
                         (ADJP (VBN laid)
                               (HYPH -)
                               (RP off))
                         (NNS workers))
                     (SBAR (WHNP-1 (WP who))
                           (S (NP-SBJ (-NONE- *T*-1))
                              (VP (MD can)
                                  (VP (VB find)
                                      (NP (NN work))))))))
             (, ,)
             (VBP are)
             (NP-SBJ-2 (JJ private)
                       (NNS companies))
             (VP (VBG going)
                 (S (NP-SBJ (-NONE- *-2))
                    (VP (TO to)
                        (VP (VB give)
                            (NP (PRP them))
                            (NP (JJR higher)
                                (NNS wages))))))
             (. ?)))

Leaves:
-------
    0   Even
    1   for
    2   those
    3   laid
           prop:  lay.02
            v          * -> 3:0,  laid
                         -> 5:0,  off
            ARG1       * -> 6:0,  workers
    4   -
    5   off
    6   workers
    7   who
    8   *T*-1
    9   can
    10  find
           sense: find-v.1
           prop:  find.01
            v          * -> 10:0, find
            ARG0       * -> 8:0,  *T*-1 -> 7:1, who
            ARGM-MOD   * -> 9:0,  can
            ARG1       * -> 11:1, work
            LINK-SLC   * -> 2:1,  those laid - off workers
                       * -> 8:0,  *T*-1 -> 7:1, who
    11  work
    12  ,
    13  are
           prop:  be.03
            v          * -> 13:0, are
    14  private
    15  companies
    16  going
           sense: go-v.7
           prop:  go.04
            v          * -> 16:0, going
    17  *-2
    18  to
    19  give
           sense: give-v.1
    20  them
    21  higher
    22  wages
    23  ?


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
    And how are those who can not find jobs going to make a living ?

Treebanked sentence:
--------------------
    And how are those who *T*-1 can not find jobs going *-2 to make a living *T*-3 ?

Tree:
-----
    (TOP (SBARQ (CC And)
                (WHADVP-3 (WRB how))
                (SQ (VBP are)
                    (NP-SBJ-2 (NP (DT those))
                              (SBAR (WHNP-1 (WP who))
                                    (S (NP-SBJ (-NONE- *T*-1))
                                       (VP (MD can)
                                           (RB not)
                                           (VP (VB find)
                                               (NP (NNS jobs)))))))
                    (VP (VBG going)
                        (S (NP-SBJ (-NONE- *-2))
                           (VP (TO to)
                               (VP (VB make)
                                   (NP (DT a)
                                       (NN living)))))
                        (ADVP-MNR (-NONE- *T*-3))))
                (. ?)))

Leaves:
-------
    0   And
    1   how
    2   are
           prop:  be.03
            v          * -> 2:0,  are
    3   those
    4   who
    5   *T*-1
    6   can
    7   not
    8   find
           sense: find-v.1
           prop:  find.01
            v          * -> 8:0,  find
            ARG0       * -> 5:0,  *T*-1 -> 4:1, who
            ARGM-MOD   * -> 6:0,  can
            ARGM-NEG   * -> 7:0,  not
            ARG1       * -> 9:1,  jobs
            LINK-SLC   * -> 3:1,  those
                       * -> 5:0,  *T*-1 -> 4:1, who
    9   jobs
    10  going
           sense: go-v.7
           prop:  go.04
            v          * -> 10:0, going
    11  *-2
    12  to
    13  make
           sense: make-v.7
    14  a
    15  living
    16  *T*-3
    17  ?


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
    Has the government thought about this ?

Treebanked sentence:
--------------------
    Has the government thought about this ?

Tree:
-----
    (TOP (SQ (VBZ Has)
             (NP-SBJ (DT the)
                     (NN government))
             (VP (VBN thought)
                 (PP-CLR (IN about)
                         (NP (DT this))))
             (. ?)))

Leaves:
-------
    0   Has
           sense: have-v.12
    1   the
    2   government
    3   thought
           prop:  think.01
            v          * -> 3:0,  thought
            ARG0       * -> 1:1,  the government
            ARG2       * -> 4:1,  about this
    4   about
    5   this
    6   ?


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
    If there are problems in the future, who will then be the one breaking the " law " ?

Treebanked sentence:
--------------------
    If there are problems in the future , who will *T*-1 then be the one breaking the " law " ?

Tree:
-----
    (TOP (SBARQ (SBAR-ADV (IN If)
                          (S (NP-SBJ (EX there))
                             (VP (VBP are)
                                 (NP-PRD (NNS problems))
                                 (PP-TMP (IN in)
                                         (NP (DT the)
                                             (NN future))))))
                (, ,)
                (WHNP-1 (WP who))
                (SQ (MD will)
                    (NP-SBJ (-NONE- *T*-1))
                    (ADVP-TMP (RB then))
                    (VP (VB be)
                        (NP-PRD (NP (DT the)
                                    (NN one))
                                (VP (VBG breaking)
                                    (NP (DT the)
                                        (`` ")
                                        (NN law)
                                        ('' "))))))
                (. ?)))

Leaves:
-------
    0   If
    1   there
    2   are
           sense: be-v.3
           prop:  be.02
            v          * -> 2:0,  are
            ARG1       * -> 3:1,  problems
            ARGM-TMP   * -> 4:1,  in the future
    3   problems
    4   in
    5   the
    6   future
    7   ,
    8   who
    9   will
    10  *T*-1
    11  then
    12  be
           sense: be-v.2
           prop:  be.01
            v          * -> 12:0, be
            ARGM-MOD   * -> 9:0,  will
            ARG1       * -> 10:0, *T*-1 -> 8:1, who
            ARGM-TMP   * -> 11:1, then
            ARG2       * -> 13:2, the one breaking the " law "
    13  the
    14  one
    15  breaking
           sense: break-v.4
           prop:  break.01
            v          * -> 15:0, breaking
            ARG0       * -> 13:1, the one
            ARG1       * -> 16:1, the " law "
    16  the
    17  "
    18  law
    19  "
    20  ?

