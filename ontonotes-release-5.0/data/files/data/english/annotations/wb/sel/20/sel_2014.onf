------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
    I suppose backtracking creates predicates in the code, which the interpreter does n't understand.

Treebanked sentence:
--------------------
    I suppose 0 backtracking creates predicates in the code , which the interpreter does n't understand *T*-1 .

Tree:
-----
    (TOP (S (NP-SBJ (PRP I))
            (VP (VBP suppose)
                (SBAR (-NONE- 0)
                      (S (NP-SBJ (NN backtracking))
                         (VP (VBZ creates)
                             (NP (NP (NP (NNS predicates))
                                     (PP-LOC (IN in)
                                             (NP (DT the)
                                                 (NN code))))
                                 (, ,)
                                 (SBAR (WHNP-1 (WDT which))
                                       (S (NP-SBJ (DT the)
                                                  (NN interpreter))
                                          (VP (VBZ does)
                                              (RB n't)
                                              (VP (VB understand)
                                                  (NP (-NONE- *T*-1)))))))))))
            (. .)))

Leaves:
-------
    0   I
    1   suppose
           sense: suppose-v.2
           prop:  suppose.01
            v          * -> 1:0,  suppose
            ARG0       * -> 0:1,  I
            ARG1       * -> 2:1,  0 backtracking creates predicates in the code , which the interpreter does n't
                                  understand *T*-1
    2   0
    3   backtracking
    4   creates
    5   predicates
    6   in
    7   the
    8   code
    9   ,
    10  which
    11  the
    12  interpreter
    13  does
    14  n't
    15  understand
    16  *T*-1
    17  .

